syntax = "proto3";
package szconfigmanager;

option go_package = "github.com/senzing-garage/sz-sdk-go-grpc/szconfigmanager";
option java_package = "com.senzing.sz.engine.grpc.SzConfigManager";
option java_outer_classname = "SzConfigManagerProto";

service SzConfigManager {
  rpc AddConfig (AddConfigRequest) returns (AddConfigResponse) {}
  rpc GetConfig (GetConfigRequest) returns (GetConfigResponse) {}
  rpc GetConfigs (GetConfigsRequest) returns (GetConfigsResponse) {}
  rpc GetDefaultConfigId (GetDefaultConfigIdRequest) returns (GetDefaultConfigIdResponse) {}
  rpc ReplaceDefaultConfigId (ReplaceDefaultConfigIdRequest) returns (ReplaceDefaultConfigIdResponse) {}
  rpc SetDefaultConfigId (SetDefaultConfigIdRequest) returns (SetDefaultConfigIdResponse) {}
}

message AddConfigRequest {
  string configDefinition = 1;
  string configComment = 2;
}

message AddConfigResponse {
  int64 result = 1;
}

message GetConfigRequest {
  int64 configId = 1;
}

message GetConfigResponse {
  string result = 1;
}

message GetConfigsRequest {}

message GetConfigsResponse {
  string result = 1;
}

message GetDefaultConfigIdRequest {}

message GetDefaultConfigIdResponse {
  int64 result = 1;
}

message ReplaceDefaultConfigIdRequest {
  int64 currentDefaultConfigId = 1;
  int64 newDefaultConfigId = 2;
}

message ReplaceDefaultConfigIdResponse {}

message SetDefaultConfigIdRequest {
  int64 configId = 1;
}

message SetDefaultConfigIdResponse {}
