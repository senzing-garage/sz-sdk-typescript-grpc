/**
 * @fileoverview gRPC-Web generated client stub for szengine
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.19.1
// source: szengine.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as szengine_pb from './szengine_web_pb'; // proto import: "szengine.proto"


export class SzEngineClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/AddRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.AddRecordRequest,
    szengine_pb.AddRecordResponse,
    (request: szengine_pb.AddRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.AddRecordResponse.deserializeBinary
  );

  addRecord(
    request: szengine_pb.AddRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.AddRecordResponse>;

  addRecord(
    request: szengine_pb.AddRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.AddRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.AddRecordResponse>;

  addRecord(
    request: szengine_pb.AddRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.AddRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/AddRecord',
        request,
        metadata || {},
        this.methodDescriptorAddRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/AddRecord',
    request,
    metadata || {},
    this.methodDescriptorAddRecord);
  }

  methodDescriptorCloseExport = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/CloseExport',
    grpcWeb.MethodType.UNARY,
    szengine_pb.CloseExportRequest,
    szengine_pb.CloseExportResponse,
    (request: szengine_pb.CloseExportRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.CloseExportResponse.deserializeBinary
  );

  closeExport(
    request: szengine_pb.CloseExportRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.CloseExportResponse>;

  closeExport(
    request: szengine_pb.CloseExportRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.CloseExportResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.CloseExportResponse>;

  closeExport(
    request: szengine_pb.CloseExportRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.CloseExportResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/CloseExport',
        request,
        metadata || {},
        this.methodDescriptorCloseExport,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/CloseExport',
    request,
    metadata || {},
    this.methodDescriptorCloseExport);
  }

  methodDescriptorCountRedoRecords = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/CountRedoRecords',
    grpcWeb.MethodType.UNARY,
    szengine_pb.CountRedoRecordsRequest,
    szengine_pb.CountRedoRecordsResponse,
    (request: szengine_pb.CountRedoRecordsRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.CountRedoRecordsResponse.deserializeBinary
  );

  countRedoRecords(
    request: szengine_pb.CountRedoRecordsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.CountRedoRecordsResponse>;

  countRedoRecords(
    request: szengine_pb.CountRedoRecordsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.CountRedoRecordsResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.CountRedoRecordsResponse>;

  countRedoRecords(
    request: szengine_pb.CountRedoRecordsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.CountRedoRecordsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/CountRedoRecords',
        request,
        metadata || {},
        this.methodDescriptorCountRedoRecords,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/CountRedoRecords',
    request,
    metadata || {},
    this.methodDescriptorCountRedoRecords);
  }

  methodDescriptorDeleteRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/DeleteRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.DeleteRecordRequest,
    szengine_pb.DeleteRecordResponse,
    (request: szengine_pb.DeleteRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.DeleteRecordResponse.deserializeBinary
  );

  deleteRecord(
    request: szengine_pb.DeleteRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.DeleteRecordResponse>;

  deleteRecord(
    request: szengine_pb.DeleteRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.DeleteRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.DeleteRecordResponse>;

  deleteRecord(
    request: szengine_pb.DeleteRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.DeleteRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/DeleteRecord',
        request,
        metadata || {},
        this.methodDescriptorDeleteRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/DeleteRecord',
    request,
    metadata || {},
    this.methodDescriptorDeleteRecord);
  }

  methodDescriptorExportCsvEntityReport = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/ExportCsvEntityReport',
    grpcWeb.MethodType.UNARY,
    szengine_pb.ExportCsvEntityReportRequest,
    szengine_pb.ExportCsvEntityReportResponse,
    (request: szengine_pb.ExportCsvEntityReportRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.ExportCsvEntityReportResponse.deserializeBinary
  );

  exportCsvEntityReport(
    request: szengine_pb.ExportCsvEntityReportRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.ExportCsvEntityReportResponse>;

  exportCsvEntityReport(
    request: szengine_pb.ExportCsvEntityReportRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.ExportCsvEntityReportResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.ExportCsvEntityReportResponse>;

  exportCsvEntityReport(
    request: szengine_pb.ExportCsvEntityReportRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.ExportCsvEntityReportResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/ExportCsvEntityReport',
        request,
        metadata || {},
        this.methodDescriptorExportCsvEntityReport,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/ExportCsvEntityReport',
    request,
    metadata || {},
    this.methodDescriptorExportCsvEntityReport);
  }

  methodDescriptorExportJsonEntityReport = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/ExportJsonEntityReport',
    grpcWeb.MethodType.UNARY,
    szengine_pb.ExportJsonEntityReportRequest,
    szengine_pb.ExportJsonEntityReportResponse,
    (request: szengine_pb.ExportJsonEntityReportRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.ExportJsonEntityReportResponse.deserializeBinary
  );

  exportJsonEntityReport(
    request: szengine_pb.ExportJsonEntityReportRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.ExportJsonEntityReportResponse>;

  exportJsonEntityReport(
    request: szengine_pb.ExportJsonEntityReportRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.ExportJsonEntityReportResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.ExportJsonEntityReportResponse>;

  exportJsonEntityReport(
    request: szengine_pb.ExportJsonEntityReportRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.ExportJsonEntityReportResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/ExportJsonEntityReport',
        request,
        metadata || {},
        this.methodDescriptorExportJsonEntityReport,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/ExportJsonEntityReport',
    request,
    metadata || {},
    this.methodDescriptorExportJsonEntityReport);
  }

  methodDescriptorFetchNext = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FetchNext',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FetchNextRequest,
    szengine_pb.FetchNextResponse,
    (request: szengine_pb.FetchNextRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FetchNextResponse.deserializeBinary
  );

  fetchNext(
    request: szengine_pb.FetchNextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FetchNextResponse>;

  fetchNext(
    request: szengine_pb.FetchNextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FetchNextResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FetchNextResponse>;

  fetchNext(
    request: szengine_pb.FetchNextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FetchNextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FetchNext',
        request,
        metadata || {},
        this.methodDescriptorFetchNext,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FetchNext',
    request,
    metadata || {},
    this.methodDescriptorFetchNext);
  }

  methodDescriptorFindInterestingEntitiesByEntityId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FindInterestingEntitiesByEntityId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FindInterestingEntitiesByEntityIdRequest,
    szengine_pb.FindInterestingEntitiesByEntityIdResponse,
    (request: szengine_pb.FindInterestingEntitiesByEntityIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FindInterestingEntitiesByEntityIdResponse.deserializeBinary
  );

  findInterestingEntitiesByEntityId(
    request: szengine_pb.FindInterestingEntitiesByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FindInterestingEntitiesByEntityIdResponse>;

  findInterestingEntitiesByEntityId(
    request: szengine_pb.FindInterestingEntitiesByEntityIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FindInterestingEntitiesByEntityIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FindInterestingEntitiesByEntityIdResponse>;

  findInterestingEntitiesByEntityId(
    request: szengine_pb.FindInterestingEntitiesByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FindInterestingEntitiesByEntityIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FindInterestingEntitiesByEntityId',
        request,
        metadata || {},
        this.methodDescriptorFindInterestingEntitiesByEntityId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FindInterestingEntitiesByEntityId',
    request,
    metadata || {},
    this.methodDescriptorFindInterestingEntitiesByEntityId);
  }

  methodDescriptorFindInterestingEntitiesByRecordId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FindInterestingEntitiesByRecordId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FindInterestingEntitiesByRecordIdRequest,
    szengine_pb.FindInterestingEntitiesByRecordIdResponse,
    (request: szengine_pb.FindInterestingEntitiesByRecordIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FindInterestingEntitiesByRecordIdResponse.deserializeBinary
  );

  findInterestingEntitiesByRecordId(
    request: szengine_pb.FindInterestingEntitiesByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FindInterestingEntitiesByRecordIdResponse>;

  findInterestingEntitiesByRecordId(
    request: szengine_pb.FindInterestingEntitiesByRecordIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FindInterestingEntitiesByRecordIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FindInterestingEntitiesByRecordIdResponse>;

  findInterestingEntitiesByRecordId(
    request: szengine_pb.FindInterestingEntitiesByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FindInterestingEntitiesByRecordIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FindInterestingEntitiesByRecordId',
        request,
        metadata || {},
        this.methodDescriptorFindInterestingEntitiesByRecordId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FindInterestingEntitiesByRecordId',
    request,
    metadata || {},
    this.methodDescriptorFindInterestingEntitiesByRecordId);
  }

  methodDescriptorFindNetworkByEntityId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FindNetworkByEntityId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FindNetworkByEntityIdRequest,
    szengine_pb.FindNetworkByEntityIdResponse,
    (request: szengine_pb.FindNetworkByEntityIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FindNetworkByEntityIdResponse.deserializeBinary
  );

  findNetworkByEntityId(
    request: szengine_pb.FindNetworkByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FindNetworkByEntityIdResponse>;

  findNetworkByEntityId(
    request: szengine_pb.FindNetworkByEntityIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FindNetworkByEntityIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FindNetworkByEntityIdResponse>;

  findNetworkByEntityId(
    request: szengine_pb.FindNetworkByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FindNetworkByEntityIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FindNetworkByEntityId',
        request,
        metadata || {},
        this.methodDescriptorFindNetworkByEntityId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FindNetworkByEntityId',
    request,
    metadata || {},
    this.methodDescriptorFindNetworkByEntityId);
  }

  methodDescriptorFindNetworkByRecordId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FindNetworkByRecordId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FindNetworkByRecordIdRequest,
    szengine_pb.FindNetworkByRecordIdResponse,
    (request: szengine_pb.FindNetworkByRecordIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FindNetworkByRecordIdResponse.deserializeBinary
  );

  findNetworkByRecordId(
    request: szengine_pb.FindNetworkByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FindNetworkByRecordIdResponse>;

  findNetworkByRecordId(
    request: szengine_pb.FindNetworkByRecordIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FindNetworkByRecordIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FindNetworkByRecordIdResponse>;

  findNetworkByRecordId(
    request: szengine_pb.FindNetworkByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FindNetworkByRecordIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FindNetworkByRecordId',
        request,
        metadata || {},
        this.methodDescriptorFindNetworkByRecordId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FindNetworkByRecordId',
    request,
    metadata || {},
    this.methodDescriptorFindNetworkByRecordId);
  }

  methodDescriptorFindPathByEntityId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FindPathByEntityId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FindPathByEntityIdRequest,
    szengine_pb.FindPathByEntityIdResponse,
    (request: szengine_pb.FindPathByEntityIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FindPathByEntityIdResponse.deserializeBinary
  );

  findPathByEntityId(
    request: szengine_pb.FindPathByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FindPathByEntityIdResponse>;

  findPathByEntityId(
    request: szengine_pb.FindPathByEntityIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FindPathByEntityIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FindPathByEntityIdResponse>;

  findPathByEntityId(
    request: szengine_pb.FindPathByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FindPathByEntityIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FindPathByEntityId',
        request,
        metadata || {},
        this.methodDescriptorFindPathByEntityId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FindPathByEntityId',
    request,
    metadata || {},
    this.methodDescriptorFindPathByEntityId);
  }

  methodDescriptorFindPathByRecordId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/FindPathByRecordId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.FindPathByRecordIdRequest,
    szengine_pb.FindPathByRecordIdResponse,
    (request: szengine_pb.FindPathByRecordIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.FindPathByRecordIdResponse.deserializeBinary
  );

  findPathByRecordId(
    request: szengine_pb.FindPathByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.FindPathByRecordIdResponse>;

  findPathByRecordId(
    request: szengine_pb.FindPathByRecordIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.FindPathByRecordIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.FindPathByRecordIdResponse>;

  findPathByRecordId(
    request: szengine_pb.FindPathByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.FindPathByRecordIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/FindPathByRecordId',
        request,
        metadata || {},
        this.methodDescriptorFindPathByRecordId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/FindPathByRecordId',
    request,
    metadata || {},
    this.methodDescriptorFindPathByRecordId);
  }

  methodDescriptorGetActiveConfigId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetActiveConfigId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetActiveConfigIdRequest,
    szengine_pb.GetActiveConfigIdResponse,
    (request: szengine_pb.GetActiveConfigIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetActiveConfigIdResponse.deserializeBinary
  );

  getActiveConfigId(
    request: szengine_pb.GetActiveConfigIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetActiveConfigIdResponse>;

  getActiveConfigId(
    request: szengine_pb.GetActiveConfigIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetActiveConfigIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetActiveConfigIdResponse>;

  getActiveConfigId(
    request: szengine_pb.GetActiveConfigIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetActiveConfigIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetActiveConfigId',
        request,
        metadata || {},
        this.methodDescriptorGetActiveConfigId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetActiveConfigId',
    request,
    metadata || {},
    this.methodDescriptorGetActiveConfigId);
  }

  methodDescriptorGetEntityByEntityId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetEntityByEntityId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetEntityByEntityIdRequest,
    szengine_pb.GetEntityByEntityIdResponse,
    (request: szengine_pb.GetEntityByEntityIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetEntityByEntityIdResponse.deserializeBinary
  );

  getEntityByEntityId(
    request: szengine_pb.GetEntityByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetEntityByEntityIdResponse>;

  getEntityByEntityId(
    request: szengine_pb.GetEntityByEntityIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetEntityByEntityIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetEntityByEntityIdResponse>;

  getEntityByEntityId(
    request: szengine_pb.GetEntityByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetEntityByEntityIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetEntityByEntityId',
        request,
        metadata || {},
        this.methodDescriptorGetEntityByEntityId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetEntityByEntityId',
    request,
    metadata || {},
    this.methodDescriptorGetEntityByEntityId);
  }

  methodDescriptorGetEntityByRecordId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetEntityByRecordId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetEntityByRecordIdRequest,
    szengine_pb.GetEntityByRecordIdResponse,
    (request: szengine_pb.GetEntityByRecordIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetEntityByRecordIdResponse.deserializeBinary
  );

  getEntityByRecordId(
    request: szengine_pb.GetEntityByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetEntityByRecordIdResponse>;

  getEntityByRecordId(
    request: szengine_pb.GetEntityByRecordIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetEntityByRecordIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetEntityByRecordIdResponse>;

  getEntityByRecordId(
    request: szengine_pb.GetEntityByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetEntityByRecordIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetEntityByRecordId',
        request,
        metadata || {},
        this.methodDescriptorGetEntityByRecordId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetEntityByRecordId',
    request,
    metadata || {},
    this.methodDescriptorGetEntityByRecordId);
  }

  methodDescriptorGetRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetRecordRequest,
    szengine_pb.GetRecordResponse,
    (request: szengine_pb.GetRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetRecordResponse.deserializeBinary
  );

  getRecord(
    request: szengine_pb.GetRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetRecordResponse>;

  getRecord(
    request: szengine_pb.GetRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetRecordResponse>;

  getRecord(
    request: szengine_pb.GetRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetRecord',
        request,
        metadata || {},
        this.methodDescriptorGetRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetRecord',
    request,
    metadata || {},
    this.methodDescriptorGetRecord);
  }

  methodDescriptorGetRedoRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetRedoRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetRedoRecordRequest,
    szengine_pb.GetRedoRecordResponse,
    (request: szengine_pb.GetRedoRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetRedoRecordResponse.deserializeBinary
  );

  getRedoRecord(
    request: szengine_pb.GetRedoRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetRedoRecordResponse>;

  getRedoRecord(
    request: szengine_pb.GetRedoRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetRedoRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetRedoRecordResponse>;

  getRedoRecord(
    request: szengine_pb.GetRedoRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetRedoRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetRedoRecord',
        request,
        metadata || {},
        this.methodDescriptorGetRedoRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetRedoRecord',
    request,
    metadata || {},
    this.methodDescriptorGetRedoRecord);
  }

  methodDescriptorGetStats = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetStats',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetStatsRequest,
    szengine_pb.GetStatsResponse,
    (request: szengine_pb.GetStatsRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetStatsResponse.deserializeBinary
  );

  getStats(
    request: szengine_pb.GetStatsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetStatsResponse>;

  getStats(
    request: szengine_pb.GetStatsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetStatsResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetStatsResponse>;

  getStats(
    request: szengine_pb.GetStatsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetStatsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetStats',
        request,
        metadata || {},
        this.methodDescriptorGetStats,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetStats',
    request,
    metadata || {},
    this.methodDescriptorGetStats);
  }

  methodDescriptorGetVirtualEntityByRecordId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/GetVirtualEntityByRecordId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.GetVirtualEntityByRecordIdRequest,
    szengine_pb.GetVirtualEntityByRecordIdResponse,
    (request: szengine_pb.GetVirtualEntityByRecordIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.GetVirtualEntityByRecordIdResponse.deserializeBinary
  );

  getVirtualEntityByRecordId(
    request: szengine_pb.GetVirtualEntityByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.GetVirtualEntityByRecordIdResponse>;

  getVirtualEntityByRecordId(
    request: szengine_pb.GetVirtualEntityByRecordIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.GetVirtualEntityByRecordIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.GetVirtualEntityByRecordIdResponse>;

  getVirtualEntityByRecordId(
    request: szengine_pb.GetVirtualEntityByRecordIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.GetVirtualEntityByRecordIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/GetVirtualEntityByRecordId',
        request,
        metadata || {},
        this.methodDescriptorGetVirtualEntityByRecordId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/GetVirtualEntityByRecordId',
    request,
    metadata || {},
    this.methodDescriptorGetVirtualEntityByRecordId);
  }

  methodDescriptorHowEntityByEntityId = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/HowEntityByEntityId',
    grpcWeb.MethodType.UNARY,
    szengine_pb.HowEntityByEntityIdRequest,
    szengine_pb.HowEntityByEntityIdResponse,
    (request: szengine_pb.HowEntityByEntityIdRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.HowEntityByEntityIdResponse.deserializeBinary
  );

  howEntityByEntityId(
    request: szengine_pb.HowEntityByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.HowEntityByEntityIdResponse>;

  howEntityByEntityId(
    request: szengine_pb.HowEntityByEntityIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.HowEntityByEntityIdResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.HowEntityByEntityIdResponse>;

  howEntityByEntityId(
    request: szengine_pb.HowEntityByEntityIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.HowEntityByEntityIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/HowEntityByEntityId',
        request,
        metadata || {},
        this.methodDescriptorHowEntityByEntityId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/HowEntityByEntityId',
    request,
    metadata || {},
    this.methodDescriptorHowEntityByEntityId);
  }

  methodDescriptorPreprocessRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/PreprocessRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.PreprocessRecordRequest,
    szengine_pb.PreprocessRecordResponse,
    (request: szengine_pb.PreprocessRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.PreprocessRecordResponse.deserializeBinary
  );

  preprocessRecord(
    request: szengine_pb.PreprocessRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.PreprocessRecordResponse>;

  preprocessRecord(
    request: szengine_pb.PreprocessRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.PreprocessRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.PreprocessRecordResponse>;

  preprocessRecord(
    request: szengine_pb.PreprocessRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.PreprocessRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/PreprocessRecord',
        request,
        metadata || {},
        this.methodDescriptorPreprocessRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/PreprocessRecord',
    request,
    metadata || {},
    this.methodDescriptorPreprocessRecord);
  }

  methodDescriptorPrimeEngine = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/PrimeEngine',
    grpcWeb.MethodType.UNARY,
    szengine_pb.PrimeEngineRequest,
    szengine_pb.PrimeEngineResponse,
    (request: szengine_pb.PrimeEngineRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.PrimeEngineResponse.deserializeBinary
  );

  primeEngine(
    request: szengine_pb.PrimeEngineRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.PrimeEngineResponse>;

  primeEngine(
    request: szengine_pb.PrimeEngineRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.PrimeEngineResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.PrimeEngineResponse>;

  primeEngine(
    request: szengine_pb.PrimeEngineRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.PrimeEngineResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/PrimeEngine',
        request,
        metadata || {},
        this.methodDescriptorPrimeEngine,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/PrimeEngine',
    request,
    metadata || {},
    this.methodDescriptorPrimeEngine);
  }

  methodDescriptorProcessRedoRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/ProcessRedoRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.ProcessRedoRecordRequest,
    szengine_pb.ProcessRedoRecordResponse,
    (request: szengine_pb.ProcessRedoRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.ProcessRedoRecordResponse.deserializeBinary
  );

  processRedoRecord(
    request: szengine_pb.ProcessRedoRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.ProcessRedoRecordResponse>;

  processRedoRecord(
    request: szengine_pb.ProcessRedoRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.ProcessRedoRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.ProcessRedoRecordResponse>;

  processRedoRecord(
    request: szengine_pb.ProcessRedoRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.ProcessRedoRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/ProcessRedoRecord',
        request,
        metadata || {},
        this.methodDescriptorProcessRedoRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/ProcessRedoRecord',
    request,
    metadata || {},
    this.methodDescriptorProcessRedoRecord);
  }

  methodDescriptorReevaluateEntity = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/ReevaluateEntity',
    grpcWeb.MethodType.UNARY,
    szengine_pb.ReevaluateEntityRequest,
    szengine_pb.ReevaluateEntityResponse,
    (request: szengine_pb.ReevaluateEntityRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.ReevaluateEntityResponse.deserializeBinary
  );

  reevaluateEntity(
    request: szengine_pb.ReevaluateEntityRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.ReevaluateEntityResponse>;

  reevaluateEntity(
    request: szengine_pb.ReevaluateEntityRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.ReevaluateEntityResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.ReevaluateEntityResponse>;

  reevaluateEntity(
    request: szengine_pb.ReevaluateEntityRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.ReevaluateEntityResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/ReevaluateEntity',
        request,
        metadata || {},
        this.methodDescriptorReevaluateEntity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/ReevaluateEntity',
    request,
    metadata || {},
    this.methodDescriptorReevaluateEntity);
  }

  methodDescriptorReevaluateRecord = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/ReevaluateRecord',
    grpcWeb.MethodType.UNARY,
    szengine_pb.ReevaluateRecordRequest,
    szengine_pb.ReevaluateRecordResponse,
    (request: szengine_pb.ReevaluateRecordRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.ReevaluateRecordResponse.deserializeBinary
  );

  reevaluateRecord(
    request: szengine_pb.ReevaluateRecordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.ReevaluateRecordResponse>;

  reevaluateRecord(
    request: szengine_pb.ReevaluateRecordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.ReevaluateRecordResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.ReevaluateRecordResponse>;

  reevaluateRecord(
    request: szengine_pb.ReevaluateRecordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.ReevaluateRecordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/ReevaluateRecord',
        request,
        metadata || {},
        this.methodDescriptorReevaluateRecord,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/ReevaluateRecord',
    request,
    metadata || {},
    this.methodDescriptorReevaluateRecord);
  }

  methodDescriptorReinitialize = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/Reinitialize',
    grpcWeb.MethodType.UNARY,
    szengine_pb.ReinitializeRequest,
    szengine_pb.ReinitializeResponse,
    (request: szengine_pb.ReinitializeRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.ReinitializeResponse.deserializeBinary
  );

  reinitialize(
    request: szengine_pb.ReinitializeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.ReinitializeResponse>;

  reinitialize(
    request: szengine_pb.ReinitializeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.ReinitializeResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.ReinitializeResponse>;

  reinitialize(
    request: szengine_pb.ReinitializeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.ReinitializeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/Reinitialize',
        request,
        metadata || {},
        this.methodDescriptorReinitialize,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/Reinitialize',
    request,
    metadata || {},
    this.methodDescriptorReinitialize);
  }

  methodDescriptorSearchByAttributes = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/SearchByAttributes',
    grpcWeb.MethodType.UNARY,
    szengine_pb.SearchByAttributesRequest,
    szengine_pb.SearchByAttributesResponse,
    (request: szengine_pb.SearchByAttributesRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.SearchByAttributesResponse.deserializeBinary
  );

  searchByAttributes(
    request: szengine_pb.SearchByAttributesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.SearchByAttributesResponse>;

  searchByAttributes(
    request: szengine_pb.SearchByAttributesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.SearchByAttributesResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.SearchByAttributesResponse>;

  searchByAttributes(
    request: szengine_pb.SearchByAttributesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.SearchByAttributesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/SearchByAttributes',
        request,
        metadata || {},
        this.methodDescriptorSearchByAttributes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/SearchByAttributes',
    request,
    metadata || {},
    this.methodDescriptorSearchByAttributes);
  }

  methodDescriptorStreamExportCsvEntityReport = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/StreamExportCsvEntityReport',
    grpcWeb.MethodType.SERVER_STREAMING,
    szengine_pb.StreamExportCsvEntityReportRequest,
    szengine_pb.StreamExportCsvEntityReportResponse,
    (request: szengine_pb.StreamExportCsvEntityReportRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.StreamExportCsvEntityReportResponse.deserializeBinary
  );

  streamExportCsvEntityReport(
    request: szengine_pb.StreamExportCsvEntityReportRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<szengine_pb.StreamExportCsvEntityReportResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/szengine.SzEngine/StreamExportCsvEntityReport',
      request,
      metadata || {},
      this.methodDescriptorStreamExportCsvEntityReport);
  }

  methodDescriptorStreamExportJsonEntityReport = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/StreamExportJsonEntityReport',
    grpcWeb.MethodType.SERVER_STREAMING,
    szengine_pb.StreamExportJsonEntityReportRequest,
    szengine_pb.StreamExportJsonEntityReportResponse,
    (request: szengine_pb.StreamExportJsonEntityReportRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.StreamExportJsonEntityReportResponse.deserializeBinary
  );

  streamExportJsonEntityReport(
    request: szengine_pb.StreamExportJsonEntityReportRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<szengine_pb.StreamExportJsonEntityReportResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/szengine.SzEngine/StreamExportJsonEntityReport',
      request,
      metadata || {},
      this.methodDescriptorStreamExportJsonEntityReport);
  }

  methodDescriptorWhyEntities = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/WhyEntities',
    grpcWeb.MethodType.UNARY,
    szengine_pb.WhyEntitiesRequest,
    szengine_pb.WhyEntitiesResponse,
    (request: szengine_pb.WhyEntitiesRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.WhyEntitiesResponse.deserializeBinary
  );

  whyEntities(
    request: szengine_pb.WhyEntitiesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.WhyEntitiesResponse>;

  whyEntities(
    request: szengine_pb.WhyEntitiesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.WhyEntitiesResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.WhyEntitiesResponse>;

  whyEntities(
    request: szengine_pb.WhyEntitiesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.WhyEntitiesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/WhyEntities',
        request,
        metadata || {},
        this.methodDescriptorWhyEntities,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/WhyEntities',
    request,
    metadata || {},
    this.methodDescriptorWhyEntities);
  }

  methodDescriptorWhyRecordInEntity = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/WhyRecordInEntity',
    grpcWeb.MethodType.UNARY,
    szengine_pb.WhyRecordInEntityRequest,
    szengine_pb.WhyRecordInEntityResponse,
    (request: szengine_pb.WhyRecordInEntityRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.WhyRecordInEntityResponse.deserializeBinary
  );

  whyRecordInEntity(
    request: szengine_pb.WhyRecordInEntityRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.WhyRecordInEntityResponse>;

  whyRecordInEntity(
    request: szengine_pb.WhyRecordInEntityRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.WhyRecordInEntityResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.WhyRecordInEntityResponse>;

  whyRecordInEntity(
    request: szengine_pb.WhyRecordInEntityRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.WhyRecordInEntityResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/WhyRecordInEntity',
        request,
        metadata || {},
        this.methodDescriptorWhyRecordInEntity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/WhyRecordInEntity',
    request,
    metadata || {},
    this.methodDescriptorWhyRecordInEntity);
  }

  methodDescriptorWhyRecords = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/WhyRecords',
    grpcWeb.MethodType.UNARY,
    szengine_pb.WhyRecordsRequest,
    szengine_pb.WhyRecordsResponse,
    (request: szengine_pb.WhyRecordsRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.WhyRecordsResponse.deserializeBinary
  );

  whyRecords(
    request: szengine_pb.WhyRecordsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.WhyRecordsResponse>;

  whyRecords(
    request: szengine_pb.WhyRecordsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.WhyRecordsResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.WhyRecordsResponse>;

  whyRecords(
    request: szengine_pb.WhyRecordsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.WhyRecordsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/WhyRecords',
        request,
        metadata || {},
        this.methodDescriptorWhyRecords,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/WhyRecords',
    request,
    metadata || {},
    this.methodDescriptorWhyRecords);
  }

  methodDescriptorWhySearch = new grpcWeb.MethodDescriptor(
    '/szengine.SzEngine/WhySearch',
    grpcWeb.MethodType.UNARY,
    szengine_pb.WhySearchRequest,
    szengine_pb.WhySearchResponse,
    (request: szengine_pb.WhySearchRequest) => {
      return request.serializeBinary();
    },
    szengine_pb.WhySearchResponse.deserializeBinary
  );

  whySearch(
    request: szengine_pb.WhySearchRequest,
    metadata?: grpcWeb.Metadata | null): Promise<szengine_pb.WhySearchResponse>;

  whySearch(
    request: szengine_pb.WhySearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: szengine_pb.WhySearchResponse) => void): grpcWeb.ClientReadableStream<szengine_pb.WhySearchResponse>;

  whySearch(
    request: szengine_pb.WhySearchRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: szengine_pb.WhySearchResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/szengine.SzEngine/WhySearch',
        request,
        metadata || {},
        this.methodDescriptorWhySearch,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/szengine.SzEngine/WhySearch',
    request,
    metadata || {},
    this.methodDescriptorWhySearch);
  }

}

